# Service Mesh Operator config needs to happen AFTER Cert Manager issuer is created.
## If after, the istio-system namespace needs to be deleted and recreated


---
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: basic
  namespace: istio-system  
spec:
  addons:
    grafana:
      enabled: true
    kiali:
      enabled: true
      name: kiali
      install: 
        dashboard:
          viewOnly: false
          enableGrafana: true
          enableTracing: true
          enablePrometheus: true
    jaeger:
      install:
        storage:
          type: Memory
        ingress:
          enabled: true
    prometheus:
      enabled: true
  proxy:
    accessLogging:
      file:
        name: /dev/stdout
  # profiles:  
  # - default 
  security:
    certificateAuthority:
      cert-manager:
        address: 'cert-manager-istio-csr.istio-system.svc:443'
      type: cert-manager
    identity:
      type: ThirdParty
    # controlPlane:
    #   mtls: true
    dataPlane:
      mtls: true 
  telemetry:
    type: Istiod
  tracing:
    type: Jaeger
    sampling: 100
# ---
# apiVersion: maistra.io/v2  
# kind: ServiceMeshControlPlane  
# metadata:  
#   name: basic  
#   namespace: istio-system  
# spec:
#   addons:
#     kiali:
#       enabled: false
#   profiles:  
#   - default  
#   techPreview:  
#     meshConfig:  
#       defaultConfig:  
#         terminationDrainDuration: 35s   
#   gateways:  
#     ingress:  
#       service:  
#         metadata:  
#           labels:  
#             knative: ingressgateway   
#   proxy:  
#     networking:  
#       trafficControl:  
#         inbound:  
#           excludedPorts:   
#           - 8444 # metrics  
#           - 8022 # serving: wait-for-drain k8s pre-stop hook
#   security:
#     certificateAuthority:
#       cert-manager:
#         address: 'cert-manager-istio-csr.istio-system.svc:443'
#       type: cert-manager
#     identity:
#       type: ThirdParty
#     controlPlane:
#       mtls: true
#     dataPlane:
#       mtls: true 
---
apiVersion: maistra.io/v1  
kind: ServiceMeshMemberRoll  
metadata:  
  name: default  
  namespace: istio-system  
spec:  
  members:
    - httpbin
    - client


## Simple test apps (not knative)
# oc new-project httpbin
# oc create -n httpbin -f https://raw.githubusercontent.com/maistra/istio/maistra-2.4/samples/httpbin/httpbin.yaml
# oc create -n httpbin -f https://raw.githubusercontent.com/maistra/istio/maistra-2.4/samples/sleep/sleep.yaml

# oc -n httpbin exec "$(oc -n httpbin get pod -l app=sleep -o jsonpath={.items..metadata.name})" -c istio-proxy -- openssl s_client -CAfile /var/run/secrets/istio/root-cert.pem -showcerts -connect httpbin:8000
# Expect "Verification: OK"

# oc exec "$(oc get pod -l app=sleep -n httpbin -o jsonpath={.items..metadata.name})" -c sleep -n httpbin -- curl http://httpbin:8000/ip -s -o /dev/null -w "%{http_code}\n"
# Expect 200

# oc apply -n httpbin -f https://raw.githubusercontent.com/maistra/istio/maistra-2.4/samples/httpbin/httpbin-gateway.yaml
# INGRESS_HOST=$(oc -n istio-system get routes istio-ingressgateway -o jsonpath='{.spec.host}')
# curl -s -I http://$INGRESS_HOST/headers -o /dev/null -w "%{http_code}" -s
# Expect 200





##  Multi Namespace
# oc new-project httpbin client
# oc create -n client -f https://raw.githubusercontent.com/maistra/istio/maistra-2.4/samples/sleep/sleep.yaml
# oc create -n httpbin -f https://raw.githubusercontent.com/maistra/istio/maistra-2.4/samples/httpbin/httpbin.yaml
# oc -n client exec "$(oc -n client get pod -l app=sleep -o jsonpath={.items..metadata.name})" -c istio-proxy -- openssl s_client -CAfile /var/run/secrets/istio/root-cert.pem -showcerts -connect httpbin.httpbin:8000
# oc exec "$(oc get pod -l app=sleep -n client -o jsonpath={.items..metadata.name})" -c sleep -n client -- curl http://httpbin.httpbin:8000/ip -s -o /dev/null -w "%{http_code}\n"
